# Default Policies
*filter
:INPUT DROP [0:0]
:FORWARD DROP [0:0]
:OUTPUT ACCEPT [0:0]

# Loopback Interface (Allow all traffic)
-A INPUT -i lo -j ACCEPT
-A OUTPUT -o lo -j ACCEPT

# Established and Related Connections (Stateful)
-A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT

# Allow HTTP and HTTPS Traffic (Change ports if necessary)
-A INPUT -p tcp --dport 80 -j ACCEPT
-A INPUT -p tcp --dport 443 -j ACCEPT

# Use Case 24: Protect Against Cross-Site Request Forgery (CSRF) Attacks (Variations)

# Variation 1: Block Requests with Missing or Invalid CSRF Tokens
-A INPUT -p tcp --dport 80 -m http_request --url_param "csrf_token" !--value "valid_token" -j DROP
-A INPUT -p tcp --dport 443 -m http_request --url_param "csrf_token" !--value "valid_token" -j DROP
# Explanation: This rule blocks requests with missing or invalid CSRF tokens in URL parameters.

# Variation 2: Block Requests with Missing or Invalid CSRF Headers
-A INPUT -p tcp --dport 80 -m http_request --header "X-CSRF-Token" !--value "valid_token" -j DROP
-A INPUT -p tcp --dport 443 -m http_request --header "X-CSRF-Token" !--value "valid_token" -j DROP
# Explanation: This rule blocks requests with missing or invalid CSRF headers.

# Variation 3: Block Requests with Missing or Invalid SameSite Cookies
-A INPUT -p tcp --dport 80 -m http_request --cookie "session_id" !--samesite "strict" !--value "valid_id" -j DROP
-A INPUT -p tcp --dport 443 -m http_request --cookie "session_id" !--samesite "strict" !--value "valid_id" -j DROP
# Explanation: This rule blocks requests with missing or invalid SameSite cookies.

# Variation 4: Block Requests with Missing or Invalid Origin or Referer Headers
-A INPUT -p tcp --dport 80 -m http_request --header "Origin" !--value "trusted_domain.com" !--header "Referer" !--value "trusted_domain.com" -j DROP
-A INPUT -p tcp --dport 443 -m http_request --header "Origin" !--value "trusted_domain.com" !--header "Referer" !--value "trusted_domain.com" -j DROP
# Explanation: This rule blocks requests with missing or invalid Origin or Referer headers.

# Variation 5: Block Requests with Hidden Form Submissions from Malicious Websites
-A INPUT -p tcp --dport 80 -m http_request --header "Referer" --value "malicious_website.com" --method "POST" --content-type "application/x-www-form-urlencoded" -j DROP
-A INPUT -p tcp --dport 443 -m http_request --header "Referer" --value "malicious_website.com" --method "POST" --content-type "application/x-www-form-urlencoded" -j DROP
# Explanation: This rule blocks requests with hidden form submissions from malicious websites.

# Variation 6: Block Requests with Image or Script Tags from Malicious Websites
-A INPUT -p tcp --dport 80 -m http_request --header "Referer" --value "malicious_website.com" --method "GET" !--url_param "*" !--content-type "*" !--accept "*" !--user-agent "*" !--cookie "*" !--header "*" !--body "*" !--length "*" !--ttl "*" !--tos "*" !--sid-owner "*" !--uid-owner "*" !--gid-owner "*" !--pid-owner "*" !--state "*" !--ctstate "*" !--icmp-type "*" !--limit-burst "*" !--limit-rate "*" !--limit-rate-unit "*" !--limit-unit "*" !--hashlimit-burst "*"!-hashlimit-mode srcip,dstip,srclist,dstlist,srclist,dstlist,srclist,dstlist,srclist,dstlist,srclist,dstlist,srclist,dstlist,srclist,dstlist,srclist,dstlist,srclist,dstlist,srclist,dstlist,srclist,dstlist,srclist,dstlist,srclist,dstlist,srclist,dstlist,srclist,dstlist,srclist,dstlist!-hashlimit-name!-hashlimit-htable-size!-hashlimit-htable-max!-hashlimit-htable-expire!-hashlimit-htable-gcinterval!-hashlimit-rate!-hashlimit-rate-unit!-hashlimit-unit -j DROP
-A INPUT -p tcp --dport 443 -m http_request --header "Referer" --value "malicious_website.com" --method "GET" !--url_param "*" !--content-type "*" !--accept "*" !--user-agent "*" !--cookie "*" !--header "*" !--body "*" !--length "*" !--ttl "*" !--tos "*" !--sid-owner "*" !--uid-owner "*" !--gid-owner "*" !--pid-owner "*" !--state "*" !--ctstate "*" !--icmp-type "*" !--limit-burst "*" !--limit-rate "*" !--limit-rate-unit "*" !--limit-unit "*" !--hashlimit-burst "*"!-hashlimit-mode srcip,dstip,srclist,dstlist,srclist,dstlist,srclist,dstlist,srclist,dstlist,srclist,dstlist,srclist,dstlist,srclist,dstlist,srclist,dstlist,srclist,dstlist,srclist,dstlist,srclist,dstlist,srclist,dstlist,srclist,dstlist,srclist,dstlist!-hashlimit-name!-hashlimit-htable-size!-hashlimit-htable-max!-hashlimit-htable-expire!-hashlimit-htable-gcinterval!-hashlimit-rate!-hashlimit-rate-unit!-hashlimit-unit -j DROP
# Explanation: These rules block requests with image or script tags from malicious websites.

# Variation 7: Block Requests with XMLHttpRequest (XHR) from Malicious Websites
-A INPUT -p tcp --dport 80 -m http_request --header "Referer" --value "malicious_website.com" --header "X-Requested-With" --value "XMLHttpRequest" -j DROP
-A INPUT -p tcp --dport 443 -m http_request --header "Referer" --value "malicious_website.com" --header "X-Requested-With" --value "XMLHttpRequest" -j DROP
# Explanation: These rules block requests with XMLHttpRequest (XHR) from malicious websites.

# Default Drop Rule (Deny all other incoming traffic)
-A INPUT -j DROP

COMMIT
