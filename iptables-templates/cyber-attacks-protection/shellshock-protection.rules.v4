# Default Policies
*filter
:INPUT DROP [0:0]
:FORWARD DROP [0:0]
:OUTPUT ACCEPT [0:0]

# Loopback Interface (Allow all traffic)
-A INPUT -i lo -j ACCEPT
-A OUTPUT -o lo -j ACCEPT

# Established and Related Connections (Stateful)
-A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT

# Allow HTTP and HTTPS Traffic (Change ports if necessary)
-A INPUT -p tcp --dport 80 -j ACCEPT
-A INPUT -p tcp --dport 443 -j ACCEPT

# Protect Against Shellshock Attacks (Variations)

# Variation 1: Block Requests with Common Shellshock Sequences
-A INPUT -p tcp --dport 80 -m string --algo bm --string "() {" -j DROP
-A INPUT -p tcp --dport 443 -m string --algo bm --string "() {" -j DROP
# Explanation: This rule blocks requests with common shellshock sequences ("() {"), which can be used to execute arbitrary code on the server[^1^][1].

# Variation 2: Block Requests with Encoded Shellshock Sequences
-A INPUT -p tcp --dport 80 -m string --algo bm --string "%28%29%20%7B" -j DROP
-A INPUT -p tcp --dport 443 -m string --algo bm --string "%28%29%20%7B" -j DROP
# Explanation: This rule blocks requests with encoded shellshock sequences ("%28%29%20%7B"), which are equivalent to "() {" but may bypass some filters[^1^][1].

# Variation 3: Block Requests with Double Encoded Shellshock Sequences
-A INPUT -p tcp --dport 80 -m string --algo bm --string "%2528%2529%2520%257B" -j DROP
-A INPUT -p tcp --dport 443 -m string --algo bm --string "%2528%2529%2520%257B" -j DROP
# Explanation: This rule blocks requests with double encoded shellshock sequences ("%2528%2529%2520%257B"), which are equivalent to "%28%29%20%7B" but may bypass some filters[^1^][1].

# Variation 4: Block Requests with Unicode Shellshock Sequences
-A INPUT -p tcp --dport 80 -m string --algo bm --string "\u0028\u0029\u0020\u007b" -j DROP
-A INPUT -p tcp --dport 443 -m string --algo bm --string "\u0028\u0029\u0020\u007b" -j DROP
# Explanation: This rule blocks requests with unicode shellshock sequences ("\u0028\u0029\u0020\u007b"), which are equivalent to "() {" but may bypass some filters[^1^][1].

# Variation 5: Block Requests with CGI Scripts that Launch Bash Subshells
-A INPUT -p tcp --dport 80 -m http_request --content-type "application/x-www-form-urlencoded" !--url_param "bash" !--body "bash" !--header "bash" !--cookie "bash" !--user-agent "bash" !--accept "bash" !--length "bash" !--ttl "bash" !--tos "bash" !--sid-owner "bash" !--uid-owner "bash" !--gid-owner "bash" !--pid-owner "bash" !--state "bash" !--ctstate "bash" !--icmp-type "bash" !--limit-burst "bash" !--limit-rate "bash" !--limit-rate-unit "bash" !--limit-unit "bash" !--hashlimit-burst "bash"!-hashlimit-mode srcip,dstip,srclist,dstlist,srclist,dstlist,srclist,dstlist,srclist,dstlist,srclist,dstlist,srclist,dstlist,srclist,dstlist,srclist,dstlist,srclist,dstlist,srclist,dstlist,srclist,dstlist,srclist,dstlist,srclist,dstlist!-hashlimit-name!-hashlimit-htable-size!-hashlimit-htable-max!-hashlimit-htable-expire!-hashlimit-htable-gcinterval!-hashlimit-rate!-hashlimit-rate-unit!-hashlimit-unit-j DROP
-A INPUT -p tcp --dport 443 -m http_request --content-type "application/x-www-form-urlencoded" !--url_param "bash" !--body "bash" !--header "bash" !--cookie "bash" !--user-agent "bash" !--accept "bash" !--length "bash" !--ttl "bash" !--tos "bash" !--sid-owner "bash" !--uid-owner "bash" !--gid-owner "bash" !--pid-owner "bash" !--state "bash" !--ctstate "bash" !--icmp-type "bash" !--limit-burst "bash" !--limit-rate "bash" !--limit-rate-unit "bash" !--limit-unit "bash" !--hashlimit-burst "bash"!-hashlimit-mode srcip,dstip,srclist,dstlist,srclist,dstlist,srclist,dstlist,srclist,dstlist,srclist,dstlist,srclist,dstlist,srclist,dstlist,srclist,dstlist,srclist,dstlist,srclist,dstlist,srclist,dstlist!-hashlimit-name!-hashlimit-htable-size!-hashlimit-htable-max!-hashlimit-htable-expire!-hashlimit-htable-gcinterval!-hashlimit-rate!-hashlimit-rate-unit!-hashlimit-unit-j DROP
# Explanation: These rules block requests with CGI scripts that launch bash subshells, which can be used to execute arbitrary code on the server[^2^][2].

# Variation 6: Block Requests with DHCP Clients that Launch Bash Subshells
-A INPUT -p udp --dport 67 -m string --algo bm --string "() {" -j DROP
-A INPUT -p udp --dport 68 -m string --algo bm --string "() {" -j DROP
# Explanation: These rules block requests with DHCP clients that launch bash subshells, which can be used to execute arbitrary code on the server[^3^][3].

# Variation 7: Block Requests with OpenSSH Servers that Use the ForceCommand Capability
-A INPUT -p tcp --dport 22 -m string --algo bm --string "() {" -j DROP
# Explanation: This rule blocks requests with OpenSSH servers that use the ForceCommand capability, which can be used to execute arbitrary code on the server.

# Default Drop Rule (Deny all other incoming traffic)
-A INPUT -j DROP

COMMIT

